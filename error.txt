 gcc -O0 c_code/spectre_1.c -o spectre_1_x86
/usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/Scrt1.o: in function `_start':
(.text+0x24): undefined reference to `main'
collect2: error: ld returned 1 exit status



 gcc -O0 inception.c -o inception_x86
inception.c: In function ‘main’:
inception.c:53:5: error: asm-specifier for variable ‘gadget’ conflicts with asm clobber list
   53 |     __asm__ __volatile__(
      |     ^~~~~~~
inception.c:53:5: error: asm-specifier for variable ‘secret’ conflicts with asm clobber list




gcc -O0 l1tf.c -o l1tf
l1tf.c: In function ‘main’:
l1tf.c:36:16: warning: passing argument 1 of ‘munmap’ discards ‘volatile’ qualifier from pointer target type [-Wdiscarded-qualifiers]
   36 |         munmap(g_l1tf_secret_page, page_size);
      |                ^~~~~~~~~~~~~~~~~~
In file included from utils.c:9,
                 from l1tf.c:1:
/usr/include/x86_64-linux-gnu/sys/mman.h:76:26: note: expected ‘void *’ but argument is of type ‘volatile uint8_t *’ {aka ‘volatile unsigned char *’}
   76 | extern int munmap (void *__addr, size_t __len) __THROW;
      |                    ~~~~~~^~~~~~
l1tf.c:64:20: warning: passing argument 1 of ‘munmap’ discards ‘volatile’ qualifier from pointer target type [-Wdiscarded-qualifiers]
   64 |             munmap(g_l1tf_secret_page, page_size);
      |                    ^~~~~~~~~~~~~~~~~~
In file included from utils.c:9,
                 from l1tf.c:1:
/usr/include/x86_64-linux-gnu/sys/mman.h:76:26: note: expected ‘void *’ but argument is of type ‘volatile uint8_t *’ {aka ‘volatile unsigned char *’}
   76 | extern int munmap (void *__addr, size_t __len) __THROW;
      |                    ~~~~~~^~~~~~
l1tf.c:71:12: warning: passing argument 1 of ‘munmap’ discards ‘volatile’ qualifier from pointer target type [-Wdiscarded-qualifiers]
   71 |     munmap(g_l1tf_secret_page, page_size);
      |            ^~~~~~~~~~~~~~~~~~
In file included from utils.c:9,
                 from l1tf.c:1:
/usr/include/x86_64-linux-gnu/sys/mman.h:76:26: note: expected ‘void *’ but argument is of type ‘volatile uint8_t *’ {aka ‘volatile unsigned char *’}
   76 | extern int munmap (void *__addr, size_t __len) __THROW;





gcc -O0 l1tf.c -o l1tf
l1tf.c: In function ‘main’:
l1tf.c:36:18: warning: passing argument 1 of ‘mprotect’ discards ‘volatile’ qualifier from pointer target type [-Wdiscarded-qualifiers]
   36 |     if (mprotect(g_l1tf_secret_page, page_size, PROT_NONE) == -1)
      |                  ^~~~~~~~~~~~~~~~~~
In file included from utils.c:9,
                 from l1tf.c:1:
/usr/include/x86_64-linux-gnu/sys/mman.h:81:28: note: expected ‘void *’ but argument is of type ‘volatile uint8_t *’ {aka ‘volatile unsigned char *’}
   81 | extern int mprotect (void *__addr, size_t __len, int __prot) __THROW;
      |                      ~~~~~~^~~~~~



how to test -> try to automate hardware emulators
compare high level code with current attacks to see if they are close enought to be classified as an attack 
build a slide deck with challenges, next steps etc 


validate vulnerabilities - emulation
convert assmbly into datastructure like json etc for a training set (figure out labels)
   vulnerable piece of code
   sequence extracted
            convert into tokens (add padding if too small or truncate if too long)
   label for the vulnerability
generate ML pipeline





augmentations dont have same semantics
distributions before and after augmentations
make slides -> datasets, languages, no of samples per class, features, w/o augmentation confusion matrix, how augmentation, confusion matrix w/ augmentation
how training, test data is split -> is it skewed coz of imbalance

neighbouring samples to attacks


augmentation not doing all types
extract features -> arm64 windows are scarce



1. generate_class_templates.py -> /generated_variants/
